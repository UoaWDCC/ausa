{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"User": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"Happy",
							"Sad"
						]
					},
					"phoneNumbers": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"email",
					"name",
					"phoneNumbers"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.email-or-name-or-phoneNumbers_": {
				"properties": {
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"phoneNumbers": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"email",
					"name",
					"phoneNumbers"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserCreationParams": {
				"$ref": "#/components/schemas/Pick_User.email-or-name-or-phoneNumbers_"
			},
			"Faq": {
				"properties": {
					"id": {
						"type": "string"
					},
					"question": {
						"type": "string"
					},
					"answer": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"question",
					"answer"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetAllFaqsResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Faq"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"FaqResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Faq"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Faq.Exclude_keyofFaq.id__": {
				"properties": {
					"question": {
						"type": "string"
					},
					"answer": {
						"type": "string"
					}
				},
				"required": [
					"question",
					"answer"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Faq.id_": {
				"$ref": "#/components/schemas/Pick_Faq.Exclude_keyofFaq.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"FaqCreationParams": {
				"$ref": "#/components/schemas/Omit_Faq.id_"
			},
			"Partial_FaqCreationParams_": {
				"properties": {
					"question": {
						"type": "string"
					},
					"answer": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"FaqUpdateParams": {
				"$ref": "#/components/schemas/Partial_FaqCreationParams_"
			},
			"ExternalResource": {
				"properties": {
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"title",
					"url"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetAllExternalResourceResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/ExternalResource"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ExternalResourceResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ExternalResource"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_ExternalResource.Exclude_keyofExternalResource.id__": {
				"properties": {
					"title": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"title",
					"url"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_ExternalResource.id_": {
				"$ref": "#/components/schemas/Pick_ExternalResource.Exclude_keyofExternalResource.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"ExternalResourceCreationParams": {
				"$ref": "#/components/schemas/Omit_ExternalResource.id_"
			},
			"Partial_ExternalResourceCreationParams_": {
				"properties": {
					"title": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"ExternalResourceUpdateParams": {
				"$ref": "#/components/schemas/Partial_ExternalResourceCreationParams_"
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "server",
		"version": "1.0.0",
		"contact": {}
	},
	"paths": {
		"/users/{userId}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreationParams"
							}
						}
					}
				}
			}
		},
		"/faq": {
			"get": {
				"operationId": "GetAllFaqs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAllFaqsResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateFaq",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FaqResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FaqCreationParams"
							}
						}
					}
				}
			}
		},
		"/faq/{id}": {
			"get": {
				"operationId": "GetFaq",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FaqResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteFaq",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateFaq",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FaqResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FaqUpdateParams"
							}
						}
					}
				}
			}
		},
		"/external-resource": {
			"get": {
				"operationId": "GetAllExternalResources",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAllExternalResourceResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateExternalResource",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExternalResourceResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalResourceCreationParams"
							}
						}
					}
				}
			}
		},
		"/external-resource/{id}": {
			"get": {
				"operationId": "GetExternalResource",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExternalResourceResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteExternalResource",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateExternalResource",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExternalResourceResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExternalResourceUpdateParams"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}