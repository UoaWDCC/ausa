{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ExternalResource": {
				"properties": {
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"title",
					"url"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetAllExternalResourceResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/ExternalResource"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GetExternalResourceResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ExternalResource"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CommonResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"FirebaseFirestore.Timestamp": {
				"description": "A Timestamp represents a point in time independent of any time zone or\ncalendar, represented as seconds and fractions of seconds at nanosecond\nresolution in UTC Epoch time. It is encoded using the Proleptic Gregorian\nCalendar which extends the Gregorian calendar backwards to year one. It is\nencoded assuming all minutes are 60 seconds long, i.e. leap seconds are\n\"smeared\" so that no leap second table is needed for interpretation. Range\nis from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z.",
				"properties": {
					"seconds": {
						"type": "number",
						"format": "double",
						"description": "The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z."
					},
					"nanoseconds": {
						"type": "number",
						"format": "double",
						"description": "The non-negative fractions of a second at nanosecond resolution."
					}
				},
				"required": [
					"seconds",
					"nanoseconds"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserAdditionalInfo": {
				"properties": {
					"date_of_birth": {
						"$ref": "#/components/schemas/FirebaseFirestore.Timestamp"
					}
				},
				"required": [
					"date_of_birth"
				],
				"type": "object"
			},
			"CreateUserRequest": {
				"properties": {
					"id": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/UserAdditionalInfo"
					}
				},
				"required": [
					"id",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DocumentDataWithUid_UserAdditionalInfo_": {
				"allOf": [
					{
						"$ref": "#/components/schemas/UserAdditionalInfo"
					},
					{
						"properties": {
							"id": {
								"type": "string",
								"description": "The ID of the document for which this document contains data."
							}
						},
						"required": [
							"id"
						],
						"type": "object"
					}
				]
			},
			"GetAllUsersResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/DocumentDataWithUid_UserAdditionalInfo_"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GetUserResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/DocumentDataWithUid_UserAdditionalInfo_"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Partial_UserAdditionalInfo_": {
				"properties": {
					"date_of_birth": {
						"$ref": "#/components/schemas/FirebaseFirestore.Timestamp"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"UpdateUserRequest": {
				"properties": {
					"user": {
						"$ref": "#/components/schemas/Partial_UserAdditionalInfo_"
					}
				},
				"required": [
					"user"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "server",
		"version": "1.0.0",
		"contact": {}
	},
	"paths": {
		"/external-resources": {
			"get": {
				"operationId": "GetAllExternalResources",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAllExternalResourceResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/external-resources/{id}": {
			"get": {
				"operationId": "GetExternalResource",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetExternalResourceResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/users": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "Successfully created user",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommonResponse"
								}
							}
						}
					}
				},
				"description": "Creates a new user.",
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "The data for the new user.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserRequest",
								"description": "The data for the new user."
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Successfully fetched all users",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAllUsersResponse"
								}
							}
						}
					}
				},
				"description": "Retrieves all users.",
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/admin/users/{id}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Successfully fetched user",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetUserResponse"
								}
							}
						}
					}
				},
				"description": "Retrieves a user by ID.",
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"description": "The ID of the user to retrieve.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Successfully updated user",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommonResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"204": {
						"description": "Successfully deleted user",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommonResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}