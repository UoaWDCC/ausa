{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"User": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email",
					"username",
					"id"
				],
				"type": "object"
			},
			"Pick_User.id-or-email-or-name-or-username_": {
				"properties": {
					"id": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"username": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"email",
					"name",
					"username"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserCreationParams": {
				"$ref": "#/components/schemas/Pick_User.id-or-email-or-name-or-username_"
			},
			"UpdateUserPackage": {
				"properties": {
					"username": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Faq": {
				"properties": {
					"id": {
						"type": "string"
					},
					"question": {
						"type": "string"
					},
					"answer": {
						"type": "string"
					},
					"categoryId": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"question",
					"answer",
					"categoryId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetAllFaqResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Faq"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GetFaqResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Faq"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Faq.Exclude_keyofFaq.id__": {
				"properties": {
					"question": {
						"type": "string"
					},
					"answer": {
						"type": "string"
					},
					"categoryId": {
						"type": "string"
					}
				},
				"required": [
					"question",
					"answer",
					"categoryId"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Faq.id_": {
				"$ref": "#/components/schemas/Pick_Faq.Exclude_keyofFaq.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"createFaqRequest": {
				"$ref": "#/components/schemas/Omit_Faq.id_"
			},
			"Partial_createFaqRequest_": {
				"properties": {
					"question": {
						"type": "string"
					},
					"answer": {
						"type": "string"
					},
					"categoryId": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"updateFaqRequest": {
				"$ref": "#/components/schemas/Partial_createFaqRequest_"
			},
			"FaqCategory": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"url": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"url"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetAllFaqCategoryResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/FaqCategory"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GetFaqCategoryResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/FaqCategory"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_FaqCategory.Exclude_keyofFaqCategory.id__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"url": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"url"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_FaqCategory.id_": {
				"$ref": "#/components/schemas/Pick_FaqCategory.Exclude_keyofFaqCategory.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"createFaqCategoryRequest": {
				"$ref": "#/components/schemas/Omit_FaqCategory.id_"
			},
			"Partial_createFaqCategoryRequest_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"url": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"updateFaqCategoryRequest": {
				"$ref": "#/components/schemas/Partial_createFaqCategoryRequest_"
			},
			"ExternalResource": {
				"properties": {
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"title",
					"url"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetAllExternalResourceResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/ExternalResource"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GetExternalResourceResponse": {
				"properties": {
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ExternalResource"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_ExternalResource.Exclude_keyofExternalResource.id__": {
				"properties": {
					"url": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"url",
					"title"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_ExternalResource.id_": {
				"$ref": "#/components/schemas/Pick_ExternalResource.Exclude_keyofExternalResource.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"createExternalResourceRequest": {
				"$ref": "#/components/schemas/Omit_ExternalResource.id_"
			},
			"Partial_createExternalResourceRequest_": {
				"properties": {
					"url": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"updateExternalResourceRequest": {
				"$ref": "#/components/schemas/Partial_createExternalResourceRequest_"
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "server",
		"version": "1.0.0",
		"contact": {}
	},
	"paths": {
		"/users/by-username": {
			"get": {
				"operationId": "GetUserByUsername",
				"responses": {
					"200": {
						"description": "Found",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/User"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "username",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users/{userId}": {
			"get": {
				"operationId": "GetUserById",
				"responses": {
					"200": {
						"description": "Found",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/User"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Updated",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/User"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserPackage"
							}
						}
					}
				}
			}
		},
		"/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Found",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreationParams"
							}
						}
					}
				}
			}
		},
		"/users/by-userId": {
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Deleted",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/User"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/faq": {
			"get": {
				"operationId": "GetAllFaqs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAllFaqResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "category",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateFaq",
				"responses": {
					"201": {
						"description": "Successfully created FAQ",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetFaqResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/createFaqRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteAllFaqs",
				"responses": {
					"204": {
						"description": "Successfully deleted all FAQs"
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "categoryId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/faq/{id}": {
			"get": {
				"operationId": "GetFaqCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetFaqResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateFaq",
				"responses": {
					"200": {
						"description": "Successfully updated FAQ",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetFaqResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/updateFaqRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteFaq",
				"responses": {
					"204": {
						"description": "Successfully deleted FAQ"
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/faq-category": {
			"get": {
				"operationId": "GetAllFaqCategories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAllFaqCategoryResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "url",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateFaqCategory",
				"responses": {
					"201": {
						"description": "Successfully created FAQ Category",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetFaqCategoryResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/createFaqCategoryRequest"
							}
						}
					}
				}
			}
		},
		"/faq-category/{id}": {
			"get": {
				"operationId": "GetFaqCategory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetFaqCategoryResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateFaqCategory",
				"responses": {
					"200": {
						"description": "Successfully updated FAQ category",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetFaqCategoryResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/updateFaqCategoryRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteFaqCategory",
				"responses": {
					"204": {
						"description": "Successfully deleted FAQ category"
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/external-resources": {
			"get": {
				"operationId": "GetAllExternalResources",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAllExternalResourceResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateExternalResource",
				"responses": {
					"201": {
						"description": "Successfully created external resource",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetExternalResourceResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/createExternalResourceRequest"
							}
						}
					}
				}
			}
		},
		"/external-resources/{id}": {
			"get": {
				"operationId": "GetExternalResource",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetExternalResourceResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateExternalResource",
				"responses": {
					"200": {
						"description": "Successfully updated external resource",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetExternalResourceResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/updateExternalResourceRequest"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}