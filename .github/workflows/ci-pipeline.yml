name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  CI: 'true'

jobs:
  check_changes:
    name: Check Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      exists: ${{ steps.filter.outputs.exists }}
    steps:
      - uses: actions/checkout@v4

      - name: Filter changes
        uses: yumemi-inc/path-filter@v2
        id: filter
        with:
          patterns: |
            **
            !**.md
            !.gitignore
            !.gitattributes
            !.vscode/**
            !.idea/**
            !.zed/**
            !.env.example

  setup:
    name: Setup
    needs: check_changes
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      ##cache turborepo
      - name: Cache TurboRepo cache
        uses: actions/cache@v4
        id: cache-turbo
        with:
          path: |
            .turbo
            client/.turbo
            server/.turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/yarn.lock', 'turbo.json', 'tsconfig.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-


      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: |
            server/node_modules
            client/node_modules
            node_modules
            .yarn/cache
          key: node-modules-${{ hashFiles('yarn.lock') }}
          lookup-only: true

      - name: Setup Node.js if cache missed
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install yarn if cache missed
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: corepack enable yarn

      - name: Restore modules if cache missed
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            server/node_modules
            client/node_modules
            node_modules
            .yarn/cache
          key: node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            node-modules-

      - name: Install dependencies if cache missed
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn

  style:
    needs: [check_changes, setup]
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install yarn
        run: corepack enable yarn

      # Restore cached node_modules
      - name: Restore node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: |
            .yarn/cache
            node_modules
            server/node_modules
            client/node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies if cache misses
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn

      - name: Check formatting
        run: yarn format:ci --error-on-warnings

  lint:
    needs: [check_changes, setup]
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install yarn
        run: corepack enable yarn

      # Restore cached node_modules
      - name: Restore node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: |
            .yarn/cache
            node_modules
            server/node_modules
            client/node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies if cache misses
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn
      ##cache turborepo
      - name: Cache TurboRepo cache
        uses: actions/cache@v4
        id: cache-turbo
        with:
          path: |
            .turbo
            client/.turbo
            server/.turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/yarn.lock', 'turbo.json', 'tsconfig.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Run linting
        run: yarn lint:ci --error-on-warnings

  codegen:
    needs: [check_changes, setup]
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    name: Codegen
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Enable Corepack
        run: corepack enable

      # Restore cached node_modules
      - name: Restore node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: |
            .yarn/cache
            node_modules
            server/node_modules
            client/node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies if cache misses
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn
        ##cache for turborepo
      - name: Cache TurboRepo cache
        uses: actions/cache@v4
        id: cache-turbo
        with:
          path: |
            .turbo
            client/.turbo
            server/.turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/yarn.lock', 'turbo.json', 'tsconfig.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Generate typing
        run: yarn workspace server tsoa spec-and-routes

      - name: Write git diff
        run: |
          if git diff --quiet; then
            echo "TYPE_GEN_DIFF=0" >> $GITHUB_ENV
          else
            echo "TYPE_GEN_DIFF=1" >> $GITHUB_ENV
          fi

      - name: Check for differences in typing
        if: ${{ env.TYPE_GEN_DIFF != '0'}}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Your code generation for the server is not up to date. Run yarn workspace server tsoa spec-and-routes')

  build:
    needs: [check_changes, setup]
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    name: Build
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install yarn
        run: corepack enable yarn
      ##cache turbo repo
      - name: Cache TurboRepo cache
        uses: actions/cache@v4
        id: cache-turbo
        with:
          path: |
            .turbo
            client/.turbo
            server/.turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/yarn.lock', 'turbo.json', 'tsconfig.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      # Restore cached node_modules
      - name: Restore node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: |
            .yarn/cache
            node_modules
            server/node_modules
            client/node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies if cache misses
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn

      - name: Build
        run: yarn build

  verify:
    name: Verify
    needs: [check_changes, build, lint, style, codegen]
    runs-on: ubuntu-latest
    if: ${{ always() && (needs.check_changes.outputs.exists != 'true' || (needs.build.result == 'success' && needs.lint.result == 'success' && needs.style.result == 'success')) }}
    steps:
      - name: All checks passed
        run: echo "All checks passed!"
